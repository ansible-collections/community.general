# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

# Substitution converts str to AnsibleUnicode
# -------------------------------------------
{% for i in (0, 1, 2, 3) %}

- name: {{ tests[i].d }}
  assert:
{% if tests[i].alias is defined %}
    that: result == dtype
    success_msg: '{{ tests[i].i | to_json }} is {{ start }} dtype {{ stop }}'
    fail_msg: '{{ tests[i].i | to_json }} is {{ start }} result {{ stop }}'
    quiet: '{{ start }} quiet_test | d(true) | bool {{ stop }}'
  vars:
    alias: {{ tests[i].alias | to_json }}
    data: {{ tests[i].i | to_json }}
    result: '{{ start }} data | community.general.reveal_ansible_type(alias) {{ stop }}'
    dtype: '{{ tests[i].r }}'
{% else %}
    that: result == dtype
    success_msg: '{{ tests[i].i | to_json }} is {{ start }} dtype {{ stop }}'
    fail_msg: '{{ tests[i].i | to_json }} is {{ start }} result {{ stop }}'
    quiet: '{{ start }} quiet_test | d(true) | bool {{ stop }}'
  vars:
    data: {{ tests[i].i | to_json }}
    result: '{{ start }} data | community.general.reveal_ansible_type {{ stop }}'
    dtype: '{{ tests[i].r }}'
{% endif %}
{% endfor %}

# No substitution and no alias. Type of strings is str
# ----------------------------------------------------
{% for test in tests.4.group %}

- name: {{ test.d }}
  assert:
    that: result == dtype
    success_msg: '{{ test.i | to_json }} is {{ start }} dtype {{ stop }}'
    fail_msg:  '{{ test.i | to_json }} is {{ start }} result {{ stop }}'
    quiet: '{{ start }} quiet_test | d(true) | bool {{ stop }}'
  vars:
    result: '{{ start }} {{ test.i | to_json }} | community.general.reveal_ansible_type {{ stop }}'
    dtype: {{ test.r }}
{% endfor %}

# Type of strings is AnsibleUnicode or str
# ----------------------------------------
{% for test in tests.5.group %}

- name: {{ test.d }}
  assert:
    that: result == dtype
    success_msg: 'data is {{ start }} dtype {{ stop }}'
    fail_msg: 'data is {{ start }} result {{ stop }}'
    quiet: '{{ start }} quiet_test | d(true) | bool {{ stop }}'
  vars:
    alias: {{ tests.5.alias | to_json }}
    data: {{ test.i }}
    result: '{{ start }} data | community.general.reveal_ansible_type(alias) {{ stop }}'
    dtype: {{ test.r }}
{% endfor %}
