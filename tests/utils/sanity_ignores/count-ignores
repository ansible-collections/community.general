#!/usr/bin/python3

import sys
import re
from signal import signal, SIGPIPE, SIG_DFL


signal(SIGPIPE,SIG_DFL) 
result = dict()
excludes = (
    #"/cloud/google/",
    #"/cloud/ovirt/",
    #"/net_tools/nios/",
    #"/storage/netapp/",
)
assert 2 <= len(sys.argv) <= 4
filename=sys.argv[1]
depth=sys.argv[2] if len(sys.argv) == 3 else "f"
re_filter=re.compile(sys.argv[3]) if len(sys.argv) == 4 else re.compile(".*")

def incr_elem(elem):
    result[elem] = result.get(elem, 0) + 1

def retrieve_lines(fh):
    lines = []
    for line in fh:
        if not line.startswith("plugins/modules/") or any([e in line for e in excludes]):
            continue
        line = line.split()[0]
        line = "/".join(line.split("/")[2:])
        lines.append(line)
    return lines

if filename == '-':
    lines = retrieve_lines(sys.stdin)
else:
    with open(filename) as ifile:
        lines = retrieve_lines(ifile)

if depth == "f":
    for line in lines:
        incr_elem(line)
elif 0 < int(depth):
    depth = int(depth)
    for line in lines:
        a = line.split("/")
        term = "/".join([a[x] for x in range(depth) if x < len(a)])
        incr_elem(term)

for line, count in list(sorted(result.items(), key=lambda item: item[1], reverse=True)):
    if not re_filter.match(line):
        continue
    print(f"{count:6d} {line}")
        
