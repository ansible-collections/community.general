- name: LOCAL | empty_commit == 'fail' and not output
  register: result
  git_commit:
    path: "{{ playbook_dir }}/test_directory/repo"
    comment: I am an empty commit.
    empty_commit: fail
  ignore_errors: yes
- debug: var=result
- assert: { that: "result.changed == false" }

- name: FILE | set first random file name.
  set_fact:
    file1: "{{ lookup('pipe','date +%s%N') }}.txt"

- name: FILE | Create file1
  file:
    path: "{{ playbook_dir }}/test_directory/repo/{{ file1 }}"
    state: touch

- name: LOCAL | empty_commit == 'fail' and output
  register: result
  git_commit:
    path: "{{ playbook_dir }}/test_directory/repo"
    comment: "Add {{ file1 }}"
    add: [ "{{ file1 }}" ]
    empty_commit: fail
- debug: var=result
- assert: { that: "result.changed == true" }

- name: FILE | set first random file name.
  set_fact:
    file2: "{{ lookup('pipe','date +%s%N') }}.txt"

- name: FILE | Create file2
  file:
    path: "{{ playbook_dir }}/test_directory/repo/{{ file2 }}"
    state: touch

- name: LOCAL | test add=["."]
  register: result
  git_commit:
    path: "{{ playbook_dir }}/test_directory/repo"
    comment: "Add all the thinghs"
    empty_commit: fail
- debug: var=result
- assert: { that: "result.changed == true" }

- name: LOCAL | empty_commit == 'allow' and not output
  register: result
  git_commit:
    path: "{{ playbook_dir }}/test_directory/repo"
    comment: "Nothing to add, allow-empty"
    add: [ "." ]
    empty_commit: allow
- debug: var=result
- assert: { that: "result.changed == true" }

- name: FILE | set first random file name.
  set_fact:
    file3: "{{ lookup('pipe','date +%s%N') }}.txt"

- name: FILE | Create file3
  file:
    path: "{{ playbook_dir }}/test_directory/repo/{{ file3 }}"
    state: touch

- name: LOCAL | empty_commit == 'allow' and output - warning
  register: result
  git_commit:
    path: "{{ playbook_dir }}/test_directory/repo"
    comment: "Drop a warning"
    add: [ "{{ file3 }}" ]
    empty_commit: allow
- debug: var=result
- assert: { that: "result.changed == true" }

- name: LOCAL | empty_commit == 'skip' and not output
  register: result
  git_commit:
    path: "{{ playbook_dir }}/test_directory/repo"
    comment: "Drop a warning"
    add: [ "." ]
    empty_commit: skip
- debug: var=result
- assert: { that: "result.changed == false" }

- name: FILE | set first random file name.
  set_fact:
    file4: "{{ lookup('pipe','date +%s%N') }}.txt"

- name: FILE | Create file4
  file:
    path: "{{ playbook_dir }}/test_directory/repo/{{ file4 }}"
    state: touch

- name: LOCAL | empty_commit == 'skip' and output - warning
  register: result
  git_commit:
    path: "{{ playbook_dir }}/test_directory/repo"
    comment: "Drop a warning"
    add: [ "{{ file4 }}" ]
    empty_commit: skip
- debug: var=result
- assert: { that: "result.changed == false" }