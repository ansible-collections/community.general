- name: python 2
  set_fact:
    python_suffix: ''
  when: ansible_python_version is version('3', '<')
- name: python 3
  set_fact:
    python_suffix: -py3
  when: ansible_python_version is version('3', '>=')
- name: Include distribution specific variables
  include_vars: '{{ lookup(''first_found'', params) }}'
  vars:
    params:
      files:
      - '{{ ansible_facts.distribution }}-{{ ansible_facts.distribution_major_version
        }}{{ python_suffix }}.yml'
      - '{{ ansible_facts.distribution }}-{{ ansible_facts.distribution_major_version
        }}.yml'
      - '{{ ansible_facts.os_family }}-{{ ansible_facts.distribution_major_version
        }}{{ python_suffix }}.yml'
      - '{{ ansible_facts.os_family }}-{{ ansible_facts.distribution_major_version
        }}.yml'
      - '{{ ansible_facts.distribution }}{{ python_suffix }}.yml'
      - '{{ ansible_facts.os_family }}{{ python_suffix }}.yml'
      - default{{ python_suffix }}.yml
      paths: '{{ role_path }}/vars'
- name: install mysqldb_test rpm dependencies
  yum:
    name: '{{ mysql_packages }}'
    state: latest
  when: ansible_pkg_mgr == 'yum'
  notify: cleanup mysql
- name: install mysqldb_test rpm dependencies
  dnf:
    name: '{{ mysql_packages }}'
    state: latest
    install_weak_deps: false
  when: ansible_pkg_mgr == 'dnf'
  notify: cleanup mysql
- name: install mysqldb_test debian dependencies
  apt:
    name: '{{ mysql_packages }}'
    state: latest
  when: ansible_pkg_mgr == 'apt'
  notify: cleanup mysql
- name: install mysqldb_test FreeBSD dependencies
  package:
    name: '{{ mysql_packages }}'
    state: present
  when: ansible_os_family == "FreeBSD"
  notify: cleanup mysql
- name: install mysql-python package via pip (FreeBSD)
  pip:
    name: mysql-python
    state: present
  when: ansible_os_family == "FreeBSD"
  notify:
  - cleanup mysql
  - remove pip packages
- name: enable mysql-server service (FreeBSD)
  lineinfile:
    path: /etc/rc.conf
    line: mysql_server_enable="YES"
  when: ansible_os_family == "FreeBSD"
- name: apply work-around for OverlayFS issue
  command: find {{ mysql_data_dirs[0] }} -type f -exec touch {} ;
  ignore_errors: true
- name: restart mysql_db service
  service:
    name: '{{ mysql_service }}'
    state: restarted
- name: Detect socket path
  shell: 'echo "show variables like ''socket''\G" | mysql | grep ''Value: '' | sed
    ''s/[ ]\+Value: //'''
  register: _socket_path
- name: Set socket path
  set_fact:
    mysql_socket: '{{ _socket_path["stdout"] }}'
