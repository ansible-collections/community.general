####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

# Test code for the disk_info module
# Copyright 2021 VMware, Inc
#
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
- name: "Installing the psutil module"
  pip:
    name: psutil
    extra_args: "-c {{ remote_constraints }}"

- name: "Checking the information from df command"
  shell:  "df -h | grep '^/' | awk '{ print $1 }'"
  register: result_df

- name: "Checking the all disk info"
  community.general.disk_info:
  register: result_all_disk

- name: "Checking the specific disk info"
  community.general.disk_info:
    name: "{{ result_df.stdout_lines[0] }}"
  register: result_specific_disk

- name: "Checking the specific disk info with filter option"
  community.general.disk_info:
    name: "{{ result_df.stdout_lines[0] }}"
    filter:
      - mountpoint
      - fstype
  register: result_specific_disk_withfilter

- name: "Obtaining all disk info check"
  assert:
    that:
      - "{{ item in result_df.stdout_lines }}"
    success_msg: "Check for obtaining all disk info passed"
    fail_msg: "Check for obtaining all disk info failed"
  with_items: "{{ result_all_disk['disk_info'].keys() }}"

- name: "Obtaining specific disk info check"
  assert:
    that:
      - result_specific_disk['disk_info'] != {}
    success_msg: "Check for obtaining specific disk info passed"
    fail_msg: "Check for obtaining specific disk info failed"

- name: "Obtaining specific disk info with filter parameter check"
  assert:
    that:
      - result_specific_disk_withfilter['disk_info'][result_df.stdout_lines[0]].keys() | length == 2
    success_msg: "Check for obtaining specific disk info with filter passed"
    fail_msg: "Check for obtaining specific disk info with filter failed"
