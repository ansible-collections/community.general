---
# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later
- name: Wait for Keycloak
  uri:
    url: "{{ url }}/admin/"
    status_code: 200
    validate_certs: no
  register: result
  until: result.status == 200
  retries: 10
  delay: 10

- name: Create realm
  community.general.keycloak_realm:
    auth_keycloak_url: "{{ url }}"
    auth_realm: "{{ admin_realm }}"
    auth_username: "{{ admin_user }}"
    auth_password: "{{ admin_password }}"
    id: "{{ realm }}"
    realm: "{{ realm }}"
    state: present

- name: Delete not existing ldap
  community.general.keycloak_component_ldap:
    auth_keycloak_url: "{{ url }}"
    auth_realm: "{{ admin_realm }}"
    auth_username: "{{ admin_user }}"
    auth_password: "{{ admin_password }}"
    name: "{{ ldap_name }}"
    realm: "{{ realm }}"
    state: absent
  register: result

- name: Assert no change
  assert:
    that:
    - result is not changed

- name: Retrive ldap info when absent
  community.general.keycloak_component_info:
    auth_keycloak_url: "{{ url }}"
    auth_realm: "{{ admin_realm }}"
    auth_username: "{{ admin_user }}"
    auth_password: "{{ admin_password }}"
    name: "{{ ldap_name }}"
    providerType: "org.keycloak.storage.UserStorageProvider"
    realm: "{{ realm }}"
  register: result

- name: Assert ldap is missing
  assert:
    that:
    - result is not changed
    - not result.component

- name: Create ldap component
  community.general.keycloak_component_ldap:
    auth_keycloak_url: "{{ url }}"
    auth_realm: "{{ admin_realm }}"
    auth_username: "{{ admin_user }}"
    auth_password: "{{ admin_password }}"
    name: "{{ ldap_name }}"
    realm: "{{ realm }}"
    state: present
    config: "{{ ldap_config }}"
    sub_components: "{{ ldap_sub_components }}"
  register: result
    
- name: Assert component creation
  assert:
    that:
    - result is changed

- name: Retrive ldap info after creation
  community.general.keycloak_component_info:
    auth_keycloak_url: "{{ url }}"
    auth_realm: "{{ admin_realm }}"
    auth_username: "{{ admin_user }}"
    auth_password: "{{ admin_password }}"
    name: "{{ ldap_name }}"
    providerType: "org.keycloak.storage.UserStorageProvider"
    realm: "{{ realm }}"
  register: result

- name: Assert ldap exists
  assert:
    that:
    - result is not changed
    - result.component

- name: Update with no change ldap component
  community.general.keycloak_component_ldap:
    auth_keycloak_url: "{{ url }}"
    auth_realm: "{{ admin_realm }}"
    auth_username: "{{ admin_user }}"
    auth_password: "{{ admin_password }}"
    name: "{{ ldap_name }}"
    realm: "{{ realm }}"
    state: present
    config: "{{ ldap_config }}"
    sub_components: "{{ ldap_sub_components }}"
  register: result
    
- name: Assert component no change
  assert:
    that:
    - result is not changed

- name: Force change of credential ldap config
  community.general.keycloak_component_ldap:
    auth_keycloak_url: "{{ url }}"
    auth_realm: "{{ admin_realm }}"
    auth_username: "{{ admin_user }}"
    auth_password: "{{ admin_password }}"
    name: "{{ ldap_name }}"
    realm: "{{ realm }}"
    force_credential: True
    state: present
    config: "{{ ldap_config | combine({ 'bindCredential': ['newPassword']}) }}"
    sub_components: "{{ ldap_sub_components }}"
  register: result
    
- name: Assert component modification
  assert:
    that:
    - result is changed

- name: Force update ldap component
  community.general.keycloak_component_ldap:
    auth_keycloak_url: "{{ url }}"
    auth_realm: "{{ admin_realm }}"
    auth_username: "{{ admin_user }}"
    auth_password: "{{ admin_password }}"
    name: "{{ ldap_name }}"
    realm: "{{ realm }}"
    force: True
    state: present
    config: "{{ ldap_config }}"
    sub_components: "{{ ldap_sub_components }}"
  register: result
    
- name: Assert component no change
  assert:
    that:
    - result is changed

- name: Update ldap config
  community.general.keycloak_component_ldap:
    auth_keycloak_url: "{{ url }}"
    auth_realm: "{{ admin_realm }}"
    auth_username: "{{ admin_user }}"
    auth_password: "{{ admin_password }}"
    name: "{{ ldap_name }}"
    realm: "{{ realm }}"
    state: present
    config: "{{ ldap_config | combine({ 'batchSizeForSync': ['1001']}) }}"
    sub_components: "{{ ldap_sub_components }}"
  register: result
    
- name: Assert component modification
  assert:
    that:
    - result is changed
    - result.component.config.batchSizeForSync[0] == '1001'

- name: Delete ldap
  community.general.keycloak_component_ldap:
    auth_keycloak_url: "{{ url }}"
    auth_realm: "{{ admin_realm }}"
    auth_username: "{{ admin_user }}"
    auth_password: "{{ admin_password }}"
    name: "{{ ldap_name }}"
    realm: "{{ realm }}"
    state: absent
  register: result

- name: Assert component is deleted
  assert:
    that:
    - result is changed