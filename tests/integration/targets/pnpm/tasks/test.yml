---
# Copyright (c) 2023 Aritra Sen <aretrosen@proton.me>
# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

- name: "Remove any node modules"
  file:
    path: "{{ remote_dir }}/node_modules"
    state: absent

- vars:
    # sample: node-v8.2.0-linux-x64.tar.xz
    node_bin_path: "{{ remote_dir }}/{{ nodejs_path }}/bin"
    pnpm_bin_path: "{{ remote_tmp_dir }}/pnpm-v{{ pnpm_version }}/bin"
    package: "tailwindcss"
  block:
    - shell: pnpm --version
      environment:
        PATH: "{{ node_bin_path }}:{{ ansible_env.PATH }}"
      register: pnpm_version

    - debug:
        var: pnpm_version.stdout

    - name: "Install package without dependency"
      pnpm:
        path: "{{ remote_dir }}"
        executable: "{{ node_bin_path }}/pnpm"
        state: present
        name: "{{ package }}"
      environment:
        PATH: "{{ node_bin_path }}:{{ ansible_env.PATH }}"
      register: pnpm_install

    - name: "Assert that result is changed and successful"
      assert:
        that:
          - pnpm_install is success
          - pnpm_install is changed

    - name: "Reinstall package without dependency"
      pnpm:
        path: "{{ remote_dir }}"
        executable: "{{ node_bin_path }}/pnpm"
        state: present
        name: "{{ package }}"
      environment:
        PATH: "{{ node_bin_path }}:{{ ansible_env.PATH }}"
      register: pnpm_reinstall

    - name: "Assert that there is no change"
      assert:
        that:
          - pnpm_reinstall is success
          - not (pnpm_reinstall is changed)

    - name: "Manually delete package"
      file:
        path: "{{ remote_dir }}/node_modules/{{ package }}"
        state: absent

    - name: "Reinstall package"
      pnpm:
        path: "{{ remote_dir }}"
        executable: "{{ node_bin_path }}/pnpm"
        state: present
        name: "{{ package }}"
      environment:
        PATH: "{{ node_bin_path }}:{{ ansible_env.PATH }}"
      register: pnpm_fix_install

    - name: "Assert that result is changed and successful"
      assert:
        that:
          - pnpm_fix_install is success
          - pnpm_fix_install is changed

    - name: "Install package with version, without executable path"
      pnpm:
        name: "{{ package }}"
        version: 0.1.3
        path: "{{ remote_dir }}"
        state: present
      environment:
        PATH: "{{ pnpm_bin_path }}:{{ node_bin_path }}:{{ ansible_env.PATH }}"
      register: pnpm_install

    - name: "Assert that package with version is installed"
      assert:
        that:
          - pnpm_install is success
          - pnpm_install is changed

    - name: "Reinstall package with version, without explicit executable path"
      pnpm:
        name: "{{ package }}"
        version: 0.1.3
        path: "{{ remote_dir }}"
        state: present
      environment:
        PATH: "{{ pnpm_bin_path }}:{{ node_bin_path }}:{{ ansible_env.PATH }}"
      register: pnpm_reinstall

    - name: "Assert that there is no change"
      assert:
        that:
          - pnpm_reinstall is success
          - not (pnpm_reinstall is changed)

    - name: "Update package, without executable path"
      pnpm:
        name: "{{ package }}"
        path: "{{ remote_dir }}"
        state: latest
      environment:
        PATH: "{{ pnpm_bin_path }}:{{ node_bin_path }}:{{ ansible_env.PATH }}"
      register: pnpm_update

    - name: "Assert that result is changed and successful"
      assert:
        that:
          - pnpm_update is success
          - pnpm_update is changed

    - name: "Remove package, without executable path"
      pnpm:
        name: "{{ package }}"
        path: "{{ remote_dir }}"
        state: absent
      environment:
        PATH: "{{ pnpm_bin_path }}:{{ node_bin_path }}:{{ ansible_env.PATH }}"
      register: pnpm_absent

    - name: "Assert that result is changed and successful"
      assert:
        that:
          - pnpm_absent is success
          - pnpm_absent is changed

    - name: "Install package with version and alias, without executable path"
      pnpm:
        name: "{{ package }}"
        alias: tailwind-1
        version: 0.1.3
        path: "{{ remote_dir }}"
        state: present
      environment:
        PATH: "{{ pnpm_bin_path }}:{{ node_bin_path }}:{{ ansible_env.PATH }}"
      register: pnpm_install

    - name: "Assert that package with version and alias is installed"
      assert:
        that:
          - pnpm_install is success
          - pnpm_install is changed

    - name: "Reinstall package with version and alias, without explicit executable path"
      pnpm:
        name: "{{ package }}"
        alias: tailwind-1
        version: 0.1.3
        path: "{{ remote_dir }}"
        state: present
      environment:
        PATH: "{{ pnpm_bin_path }}:{{ node_bin_path }}:{{ ansible_env.PATH }}"
      register: pnpm_reinstall

    - name: "Assert that there is no change"
      assert:
        that:
          - pnpm_reinstall is success
          - not (pnpm_reinstall is changed)

    - name: "Remove package with alias, without executable path"
      pnpm:
        name: "tailwind-1"
        path: "{{ remote_dir }}"
        state: absent
      environment:
        PATH: "{{ pnpm_bin_path }}:{{ node_bin_path }}:{{ ansible_env.PATH }}"
      register: pnpm_absent

    - name: "Assert that result is changed and successful"
      assert:
        that:
          - pnpm_absent is success
          - pnpm_absent is changed

    - name: "Install package without dependency globally"
      pnpm:
        name: "{{ package }}"
        executable: "{{ node_bin_path }}/pnpm"
        state: present
        global: true
      environment:
        PATH: "{{ node_bin_path }}:{{ ansible_env.PATH }}"
      register: pnpm_install

    - name: "Assert that result is changed and successful"
      assert:
        that:
          - pnpm_install is success
          - pnpm_install is changed

    - name: "Reinstall package globally, without explicit executable path"
      pnpm:
        name: "{{ package }}"
        state: present
        global: true
      environment:
        PATH: "{{ pnpm_bin_path }}:{{ node_bin_path }}:{{ ansible_env.PATH }}"
      register: pnpm_reinstall

    - name: "Assert that there is no change"
      assert:
        that:
          - pnpm_reinstall is success
          - not (pnpm_reinstall is changed)

    - name: "Remove package without dependency globally"
      pnpm:
        name: "{{ package }}"
        executable: "{{ node_bin_path }}/pnpm"
        global: true
        state: absent
      environment:
        PATH: "{{ node_bin_path }}:{{ ansible_env.PATH }}"
      register: pnpm_absent

    - name: "Assert that result is changed and successful"
      assert:
        that:
          - pnpm_absent is success
          - pnpm_absent is changed
