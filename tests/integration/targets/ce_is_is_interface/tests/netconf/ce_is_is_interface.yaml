---
- debug:
    msg: "START ce_is_is_interface merged integration tests on connection={{ ansible_connection }}"

- block:

  - name: Merge the provided configuration with the exisiting running configuration
    ce_is_is_interface: &delete
      instance_id: 100
      ifname: 10GE1/0/1
      leveltype: level_1
      level1dispriority: 10
      silentenable: true
      silentcost: true
      typep2penable: true
      snpacheck: true
      p2pnegotiationmode: 2_way
      p2ppeeripignore: true
      ppposicpcheckenable: true
      level2cost: 10
      state: absent
    register: result

  - name: Merge the provided configuration with the exisiting running configuration
    ce_is_is_interface: &merged
      instance_id: 100
      ifname: 10GE1/0/1
      leveltype: level_1
      level1dispriority: 10
      silentenable: true
      silentcost: true
      typep2penable: true
      snpacheck: true
      p2pnegotiationmode: 2_way
      p2ppeeripignore: true
      ppposicpcheckenable: true
      level2cost: 10
    register: result

  - name: use ce_netconf to get configuration
    ce_netconf:
      rpc: get
      cfg_xml: "<filter type=\"subtree\">
                  <isiscomm xmlns=\"http://www.huawei.com/netconf/vrp\" content-version=\"1.0\" format-version=\"1.0\">
                    <isSites>
                      <isSite>
                        <instanceId>100</instanceId>
                        <isCircuits>
                          <isCircuit>
                          </isCircuit>
                        </isCircuits>
                      </isSite>
                    </isSites>
                  </isiscomm>
                </filter>"
    register: result_xml
 
  - name: Assert the configuration is reflected on host
    assert:
      that:
        - "'<ifName>10GE1/0/1</ifName>' in  result_xml.end_state.result"
        - "'<circuitLevelType>level_1</circuitLevelType>' in  result_xml.end_state.result"
        - "'<level1DisPriority>10</level1DisPriority>' in  result_xml.end_state.result"
        - "'<level2DisPriority>10</level2DisPriority>' in  result_xml.end_state.result"
        - "'<silentEnable>true</silentEnable>' in  result_xml.end_state.result"
        - "'<silentCost>true</silentCost>' in  result_xml.end_state.result"
        - "'<typeP2pEnable>true</typeP2pEnable>' in  result_xml.end_state.result"
        - "'<snpaCheck>true</snpaCheck>' in  result_xml.end_state.result"
        - "'<p2pNegotiationMode>2_way</p2pNegotiationMode>' in  result_xml.end_state.result"
        - "'<p2pPeerIPIgnore>true</p2pPeerIPIgnore>' in  result_xml.end_state.result"
        - "'<pPPOsicpCheckEnable>true</pPPOsicpCheckEnable>' in  result_xml.end_state.result"
        - "'<level1Cost>10</level1Cost>' in  result_xml.end_state.result"
        - "'<level2Cost>10</level2Cost>' in  result_xml.end_state.result"

  - name: Merge the provided configuration with the existing running configuration (IDEMPOTENT)
    ce_is_is_interface: *merged
    register: result

  - name: Assert that the previous task was idempotent
    assert:
      that:
        - "result['changed'] == false"

  - name: delete the provided configuration with the existing running configuration (IDEMPOTENT)
    ce_is_is_interface: *delete
    register: result

  - name: use ce_netconf to get configuration
    ce_netconf:
      rpc: get
      cfg_xml: "<filter type=\"subtree\">
                  <isiscomm xmlns=\"http://www.huawei.com/netconf/vrp\" content-version=\"1.0\" format-version=\"1.0\">
                    <isSites>
                      <isSite>
                        <instanceId>100</instanceId>
                        <isCircuits>
                          <isCircuit>
                          </isCircuit>
                        </isCircuits>
                      </isSite>
                    </isSites>
                  </isiscomm>
                </filter>"
    register: result_xml
 
  - name: Assert the configuration is reflected on host
    assert:
      that:
        - "'<ifName>10GE1/0/1</ifName>' not in result_xml.end_state.result"
        - "'<circuitLevelType>level_1</circuitLevelType>' not in result_xml.end_state.result"
        - "'<level1DisPriority>10</level1DisPriority>' not in result_xml.end_state.result"
        - "'<level2DisPriority>10</level2DisPriority>' not in result_xml.end_state.result"
        - "'<silentEnable>true</silentEnable>' not in result_xml.end_state.result"
        - "'<silentCost>true</silentCost>' not in result_xml.end_state.result"
        - "'<typeP2pEnable>true</typeP2pEnable>' not in result_xml.end_state.result"
        - "'<snpaCheck>true</snpaCheck>' not in result_xml.end_state.result"
        - "'<p2pNegotiationMode>2_way</p2pNegotiationMode>' not in result_xml.end_state.result"
        - "'<p2pPeerIPIgnore>true</p2pPeerIPIgnore>' not in result_xml.end_state.result"
        - "'<pPPOsicpCheckEnable>true</pPPOsicpCheckEnable>' not in result_xml.end_state.result"
        - "'<level1Cost>10</level1Cost>' not in result_xml.end_state.result"
        - "'<level2Cost>10</level2Cost>' not in result_xml.end_state.result"

  - name: delete the provided configuration with the existing running configuration (REPEAT)
    ce_is_is_interface: *delete
    register: result

  - name: Assert that the previous task was REPEAT
    assert:
      that:
        - "result['changed'] == false"

- debug:
    msg: "END ce_is_is_interface merged integration tests on connection={{ ansible_connection }}"
