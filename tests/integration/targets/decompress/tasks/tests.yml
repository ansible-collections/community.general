---
# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Set mode for decompressed file ({{ format }} test)
  set_fact:
    decompressed_mode: "0640"

- name: Simple decompress ({{ format }} test)
  community.general.decompress:
    src: "{{ remote_tmp_dir }}/file.txt.{{ format }}"
    dest: "{{ remote_tmp_dir }}/file_from_{{ format }}.txt"
    format: "{{ format }}"
    mode: "{{ decompressed_mode }}"
  register: first_decompression

- name: Stat decompressed file ({{ format }} test)
  stat:
    path: "{{ remote_tmp_dir }}/file_from_{{ format }}.txt"
  register: decompressed_file_stat

- name: Check that file was decompressed correctly ({{ format }} test)
  assert:
    that:
      - first_decompression.changed
      - decompressed_file_stat.stat.exists
      - decompressed_file_stat.stat.mode == decompressed_mode
      - orig_file_stat.stat.checksum == decompressed_file_stat.stat.checksum

- name: Decompress second time ({{ format }} test)
  community.general.decompress:
    src: "{{ remote_tmp_dir }}/file.txt.{{ format }}"
    dest: "{{ remote_tmp_dir }}/file_from_{{ format }}.txt"
    format: "{{ format }}"
    mode: "{{ decompressed_mode }}"
  register: same_file_decompression

- name: Decompress new file to the same location ({{ format }} test)
  community.general.decompress:
    src: "{{ remote_tmp_dir }}/second_file.txt.{{ format }}"
    dest: "{{ remote_tmp_dir }}/file_from_{{ format }}.txt"
    format: "{{ format }}"
    mode: "{{ decompressed_mode }}"
  register: new_file_decompression

- name: Idempotency test
  assert:
    that:
      - not same_file_decompression.changed
      - new_file_decompression.changed

- name: Delete decompressed files
  file:
    path: "{{ remote_tmp_dir }}/file_from_{{ format }}.txt"
    state: absent

- name: Decompress with check mode enabled
  community.general.decompress:
    src: "{{ remote_tmp_dir }}/file.txt.{{ format }}"
    dest: "{{ remote_tmp_dir }}/file_from_{{ format }}.txt"
    format: "{{ format }}"
    mode: "{{ decompressed_mode }}"
  check_mode: true
  register: decompressed_check_mode

- name: Decompress second time with check mode enabled
  community.general.decompress:
    src: "{{ remote_tmp_dir }}/file.txt.{{ format }}"
    dest: "{{ remote_tmp_dir }}/file_from_{{ format }}.txt"
    format: "{{ format }}"
    mode: "{{ decompressed_mode }}"
  check_mode: true
  register: decompressed_check_mode_2

- name: Stat non-existing file
  stat:
    path: "{{ remote_tmp_dir }}/file_from_{{ format }}.txt"
  register: nonexisting_stat

- name: Check mode test
  assert:
    that:
      - decompressed_check_mode.changed
      - decompressed_check_mode_2.changed
      - not nonexisting_stat.stat.exists
