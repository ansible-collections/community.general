---
# (c) 2022, DEMAREST Maxime <maxime@indelog.fr>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: "<mdestfile> set dest_dir and dest_file for dest file module helper"
  set_fact:
    dest_dir: "{{ remote_tmp_dir }}/destdir/"
    dest_file: "{{ remote_tmp_dir }}/destdir/destfile.txt"

- name: "<mdestfile> chek the presence of 'nobody' user"
  ansible.builtin.user:
    name: 'nobody'
    state: 'absent'
  check_mode: true
  register: check_nobody_user

- name: "<mdestfile> check if have suitable version of su"
  ansible.builtin.command: 'su -s /bin/sh -c "echo toto"'
  register: check_su_vesion
  ignore_errors: true

- name: "<mdestfile> get path for sh interpreter"
  ansible.builtin.command: 'which sh'
  register: get_sh_path
  ignore_errors: true

- name: "<mdestfile> ensure that remote_tmp_dir is readable by non privilegied user when run by root"
  ansible.builtin.file:
    path: "{{ remote_tmp_dir }}"
    mode: "0755"

- name: "<mdestfile> run test cases for dest file module helper"
  include_tasks: msdestfile-run.yml
  loop: "{{ test_cases_dest_file_module_helper }}"
  loop_control:
    loop_var: case
  # Some cases requires to using `su` to become non-privileged user (that is
  # needed to test some behaviours when destination file has unexpected rights)
  # but, some platform does not provide suitable version of `su` and the test
  # case can not be run on those.
  when: not(case.need_to_become_with_su) or ansible_user_uid > 0 or (check_nobody_user.changed == true and check_su_vesion.failed == false and get_sh_path.failed == false)
