- name: Create a high privileged user
  become: true
  become_user: '{{ pg_user }}'
  postgresql_user:
    name: '{{ db_session_role1 }}'
    state: present
    password: password
    role_attr_flags: CREATEDB,LOGIN,CREATEROLE
    login_user: '{{ pg_user }}'
    db: postgres
- name: Create DB as session_role
  become_user: '{{ pg_user }}'
  become: true
  postgresql_db:
    state: present
    name: '{{ db_session_role1 }}'
    login_user: '{{ pg_user }}'
    session_role: '{{ db_session_role1 }}'
  register: result
- name: Create schema in own database
  become_user: '{{ pg_user }}'
  become: true
  postgresql_schema:
    database: '{{ db_session_role1 }}'
    login_user: '{{ pg_user }}'
    name: '{{ db_session_role1 }}'
    session_role: '{{ db_session_role1 }}'
- name: Create schema in own database, should be owned by session_role
  become_user: '{{ pg_user }}'
  become: true
  postgresql_schema:
    database: '{{ db_session_role1 }}'
    login_user: '{{ pg_user }}'
    name: '{{ db_session_role1 }}'
    owner: '{{ db_session_role1 }}'
  register: result
- assert:
    that:
    - result is not changed
- name: Fail when creating schema in postgres database as a regular user
  become_user: '{{ pg_user }}'
  become: true
  postgresql_schema:
    database: postgres
    login_user: '{{ pg_user }}'
    name: '{{ db_session_role1 }}'
    session_role: '{{ db_session_role1 }}'
  ignore_errors: true
  register: result
- assert:
    that:
    - result is failed
- name: Drop test db
  become_user: '{{ pg_user }}'
  become: true
  postgresql_db:
    state: absent
    name: '{{ db_session_role1 }}'
    login_user: '{{ pg_user }}'
- name: Drop test users
  become: true
  become_user: '{{ pg_user }}'
  postgresql_user:
    name: '{{ item }}'
    state: absent
    login_user: '{{ pg_user }}'
    db: postgres
  with_items:
  - '{{ db_session_role1 }}'
  - '{{ db_session_role2 }}'
