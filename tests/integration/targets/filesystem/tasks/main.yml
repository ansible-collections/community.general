- debug:
    msg: '{{ role_name }}'
- debug:
    msg: '{{ role_path|basename }}'
- import_tasks: setup.yml
- include_vars: '{{ lookup(''first_found'', search) }}'
  vars:
    search:
      files:
      - '{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml'
      - default.yml
      paths:
      - ../vars/
- include_tasks: create_device.yml
  vars:
    image_file: '{{ remote_tmp_dir }}/img'
    fstype: '{{ item.0.key }}'
    fssize: '{{ item.0.value.fssize }}'
    grow: '{{ item.0.value.grow }}'
    action: '{{ item.1 }}'
  when:
  - not (item.0.key == "btrfs" and ansible_system == "FreeBSD")
  - not (item.0.key == "btrfs" and (ansible_distribution == "Ubuntu" and ansible_distribution_release
    == "trusty"))
  - not (item.0.key == "btrfs" and (ansible_facts.os_family == "RedHat" and ansible_facts.distribution_major_version
    is version("8", ">=")))
  - not (item.0.key == "lvm" and ansible_system == "FreeBSD")
  - not (item.0.key == "lvm" and ansible_virtualization_type == "docker")
  - not (item.0.key == "ocfs2" and ansible_os_family != "Debian")
  - not (item.0.key == "f2fs" and ansible_system == "FreeBSD")
  - not (item.0.key == "f2fs" and ansible_distribution in ["CentOS", "RedHat"])
  - not (item.0.key == "f2fs" and ansible_distribution == "Ubuntu" and ansible_distribution_version
    is version("14.04", "<="))
  - not (item.1 == "overwrite_another_fs" and ansible_system == "FreeBSD")
  - not (item.0.key == "xfs" and ansible_os_family == "Suse" and ansible_python.version.major
    == 2 and ansible_distribution_major_version|int != 42)
  loop: '{{ query(''dict'', tested_filesystems)|product([''create_fs'', ''overwrite_another_fs''])|list
    }}'
