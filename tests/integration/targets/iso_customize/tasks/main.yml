####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

# Copyright (c) 2022, Ansible Project
# Copyright (c) 2022, VMware, Inc. All Rights Reserved.
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

- name: install pycdlib
  pip:
    name: pycdlib
    # state: latest
    # extra_args: "-c {{ remote_constraints }}"
  register: install_pycdlib
- debug: var=install_pycdlib

- set_fact:
    output_test_dir: '{{ remote_tmp_dir }}/test_iso_customize'

- include_tasks: prepare.yml
  vars:
    test_dir: "{{ output_test_dir }}"

- name: Create iso file with a specified file and directory
  community.general.iso_create:
    src_files:
      - "{{ output_test_dir }}/test01.cfg"
    dest_iso: "{{ output_test_dir }}/test.iso"
    interchange_level: 3
  register: iso_result

- debug: var=iso_result

- include_tasks: iso_customize.yml  
  vars:
    test_dir: "{{ output_test_dir }}"
    dest_iso_name: "iso_customize.iso"

- name: Create an ISO file with Rock Ridge extension
  community.general.iso_create:
    src_files:
      - "{{ output_test_dir }}/test01.cfg"
    dest_iso: "{{ output_test_dir }}/test.iso"
    rock_ridge: "1.09"
  register: iso_result

- debug: var=iso_result

- include_tasks: iso_customize.yml
  vars:
    test_dir: "{{ output_test_dir }}"
    dest_iso_name: "iso_customize_rr.iso"

- name: Create an ISO file with Joliet support
  community.general.iso_create:
    src_files:
      - "{{ output_test_dir }}/test01.cfg"
    dest_iso: "{{ output_test_dir }}/test.iso"
    interchange_level: 3
    joliet: 3
    vol_ident: AUTOINSTALL
  register: iso_result

- debug: var=iso_result

- include_tasks: iso_customize.yml 
  vars:
    test_dir: "{{ output_test_dir }}"
    dest_iso_name: "iso_customize_joliet.iso"

- name: Create iso file with UDF enabled
  community.general.iso_create:
    src_files:
      - "{{ output_test_dir }}/test01.cfg"
    dest_iso: "{{ output_test_dir }}/test.iso"
    udf: True
  register: iso_result

- debug: var=iso_result

- include_tasks: iso_customize.yml 
  vars:
    test_dir: "{{ output_test_dir }}"
    dest_iso_name: "iso_customize_udf.iso"