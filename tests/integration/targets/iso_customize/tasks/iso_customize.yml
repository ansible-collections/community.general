# Copyright (c) 2022, Ansible Project
# Copyright (c) 2022, VMware, Inc. All Rights Reserved.
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Add a line to the file test02.cfg and make sure it succeed
  ansible.builtin.lineinfile:
    path: "{{ test_dir }}/test02.cfg"
    regexp: "^test"
    line: "test"

- name: "Customize ISO file"
  community.general.iso_customize:
    src_iso: "{{ test_dir }}/test.iso"
    dest_iso: "{{ test_dir }}/{{ dest_iso_name }}"
    delete_files:
      - "/test01.cfg"
      - "/test02.cfg"
    add_files:
      - src_file: "{{ test_dir }}/test01.cfg"
        dest_file: "/preseed/ubuntu.seed"
      - src_file: "{{ test_dir }}/test02.cfg"
        dest_file: "/test02.cfg"

- debug: var=ansible_distribution

# Only need to check the files is deleted/added as the requested modifications 
# in one type of OS(take MacOS here)
- block:
    - name: "Mount customized ISO on MAC"
      shell: "hdiutil attach {{ test_dir }}/{{ dest_iso_name }} -mountroot {{ test_dir }}/iso_mount"

    # For MAC, we have different root directory for different type of ISO
    - set_fact:
        mount_root_dir: "{{ test_dir }}/iso_mount/disk_image"

    - set_fact:
        mount_root_dir: "{{ test_dir }}/iso_mount/AUTOINSTALL"
      when: dest_iso_name.find('joliet') != -1

    - set_fact:
        mount_root_dir: "{{ test_dir }}/iso_mount/CDROM"
      when: dest_iso_name.find('udf') != -1

    - debug: var=mount_root_dir

    - name: Check the file test01.cfg is deleted
      stat:
        path: "{{ mount_root_dir }}/test01.cfg"
      register: check_file

    - assert:
        that:
        - check_file.stat.exists == False

    - name: Check the file /preseed/ubuntu.seed is added
      stat:
        path: "{{ mount_root_dir }}/preseed/ubuntu.seed"
      register: check_file

    - assert:
        that:
        - check_file.stat.exists == True

    - name: Check if the file test02.cfg is repalced or not
      shell: "cat {{ mount_root_dir }}/test02.cfg"
      register: check_file_content
      failed_when: check_file_content.stdout.find("test") == -1

    - name: Umount ISO
      mount:
        path: "{{ mount_root_dir }}"
        fstab: "{{ test_dir }}/temp.fstab"
        state: unmounted
  when: ansible_distribution == "MacOSX"

- name: Delete line of file test02.cfg
  ansible.builtin.lineinfile:
    path: "{{ test_dir }}/test02.cfg"
    regexp: "test" 
    state: absent