# Copyright (c) 2018, Ren√© Moser <mail@renemoser.net>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: test remove a dns record in check mode
  vultr_dns_record:
    name: "{{ item.name | default(omit) }}"
    domain: "{{ vultr_dns_domain_name }}"
    data: "{{ item.update_data | default(item.data) }}"
    record_type: "{{ item.record_type | default(omit) }}"
    multiple: "{{ item.multiple | default(omit) }}"
    state: absent
  check_mode: yes
  register: result
- name: verify test remove a dns record in check mode
  assert:
    that:
    - result is changed
    - result.vultr_dns_record.data == "{{ item.update_data | default(item.data) }}"
    - result.vultr_dns_record.name == "{{ item.name | default("") }}"
    - result.vultr_dns_record.record_type == "{{ item.record_type | default('A') }}"
    - result.vultr_dns_record.ttl == {{ item.update_ttl | default(300) }}
    - result.vultr_dns_record.priority == {{ item.update_priority | default(item.priority | default(0)) }}

- name: test remove second dns record in check mode
  vultr_dns_record:
    name: "{{ item.name | default(omit) }}"
    domain: "{{ vultr_dns_domain_name }}"
    data: "{{ item.data | default(item.data) }}"
    record_type: "{{ item.record_type | default(omit) }}"
    multiple: "{{ item.multiple | default(omit) }}"
    state: absent
  check_mode: yes
  register: result
  when: item.multiple is defined and item.multiple == true
- name: verify test remove a dns record in check mode
  assert:
    that:
    - result is changed
    - result.vultr_dns_record.data == "{{ item.data | default(item.data) }}"
    - result.vultr_dns_record.name == "{{ item.name | default("") }}"
    - result.vultr_dns_record.record_type == "{{ item.record_type | default('A') }}"
    - result.vultr_dns_record.ttl == {{ item.ttl | default(300) }}
    - result.vultr_dns_record.priority == {{ item.priority | default(0) }}
  when: item.multiple is defined and item.multiple == true

- name: test remove a dns record
  vultr_dns_record:
    name: "{{ item.name | default(omit) }}"
    domain: "{{ vultr_dns_domain_name }}"
    data: "{{ item.update_data | default(item.data) }}"
    record_type: "{{ item.record_type | default(omit) }}"
    multiple: "{{ item.multiple | default(omit) }}"
    state: absent
  register: result
- name: verify test remove a dns record
  assert:
    that:
    - result is changed
    - result.vultr_dns_record.data == "{{ item.update_data | default(item.data) }}"
    - result.vultr_dns_record.name == "{{ item.name | default("") }}"
    - result.vultr_dns_record.record_type == "{{ item.record_type | default('A') }}"
    - result.vultr_dns_record.ttl == {{ item.update_ttl | default(300) }}
    - result.vultr_dns_record.priority == {{ item.update_priority | default(item.priority | default(0)) }}

- name: test remove second dns record
  vultr_dns_record:
    name: "{{ item.name | default(omit) }}"
    domain: "{{ vultr_dns_domain_name }}"
    data: "{{ item.data }}"
    record_type: "{{ item.record_type | default(omit) }}"
    multiple: "{{ item.multiple | default(omit) }}"
    state: absent
  register: result
  when: item.multiple is defined and item.multiple == true
- name: verify test remove a dns record
  assert:
    that:
    - result is changed
    - result.vultr_dns_record.data == "{{ item.data }}"
    - result.vultr_dns_record.name == "{{ item.name | default("") }}"
    - result.vultr_dns_record.record_type == "{{ item.record_type | default('A') }}"
    - result.vultr_dns_record.ttl == {{ item.ttl | default(300) }}
    - result.vultr_dns_record.priority == {{ item.priority | default(0) }}
  when: item.multiple is defined and item.multiple == true

- name: test remove a dns record idempotence
  vultr_dns_record:
    name: "{{ item.name | default(omit) }}"
    domain: "{{ vultr_dns_domain_name }}"
    data: "{{ item.update_data | default(item.data) }}"
    record_type: "{{ item.record_type | default(omit) }}"
    multiple: "{{ item.multiple | default(omit) }}"
    state: absent
  register: result
- name: verify test remove a dns record idempotence
  assert:
    that:
    - result is not changed

- name: test remove second dns record idempotence
  vultr_dns_record:
    name: "{{ item.name | default(omit) }}"
    domain: "{{ vultr_dns_domain_name }}"
    data: "{{ item.data }}"
    record_type: "{{ item.record_type | default(omit) }}"
    multiple: "{{ item.multiple | default(omit) }}"
    state: absent
  register: result
  when: item.multiple is defined and item.multiple == true
- name: verify test remove a dns record idempotence
  assert:
    that:
    - result is not changed
  when: item.multiple is defined and item.multiple == true
