---
# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

- name: install pipx
  pip:
    name: pipx
    extra_args: --user

##############################################################################
- name: ensure application tox is uninstalled
  community.general.pipx:
    state: absent
    name: tox

- name: install application tox
  community.general.pipx:
    name: tox

- name: retrieve applications
  community.general.pipx_info: {}
  register: info_all

- name: retrieve applications (include_deps=true)
  community.general.pipx_info:
    include_deps: true
  register: info_all_deps

- name: retrieve application tox
  community.general.pipx_info:
    name: tox
    include_deps: true
  register: info_tox

- name: uninstall application tox
  community.general.pipx:
    state: absent
    name: tox

- name: check assertions tox
  assert:
    that:
        - info_all.pipx_results|length == 1
        - "'tox' in info_all.pipx_results"
        - "'version' in info_all.pipx_results.tox"
        - "'dependencies' not in info_all.pipx_results.tox"
        - "'injected' not in info_all.pipx_results.tox"
        - info_all_deps.pipx_results|length == 1
        - "'tox' in info_all_deps.pipx_results"
        - "'version' in info_all.pipx_results.tox"
        - info_all_deps.pipx_results.tox.dependencies == ["virtualenv"]
        - "'injected' not in info_all.pipx_results.tox"
        - info_tox.application == "tox"
        - "'version' in info_tox"
        - info_tox.dependencies == ["virtualenv"]
        - "'injected' not in info_tox"

##############################################################################
- name: set test applications
  set_fact:
    apps:
      - name: tox
        source: tox==3.24.0
      - name: ansible-lint
        inject_packages:
          - licenses

- name: ensure applications are uninstalled
  community.general.pipx:
    name: "{{ item.name }}"
    state: absent
  loop: "{{ apps }}"

- name: install applications
  community.general.pipx:
    name: "{{ item.name }}"
    source: "{{ item.source|default(omit) }}"
  loop: "{{ apps }}"

- name: inject packages
  community.general.pipx:
    state: inject
    name: "{{ item.name }}"
    inject_packages: "{{ item.inject_packages }}"
  when: "'inject_packages' in item"
  loop: "{{ apps }}"

- name: retrieve applications
  community.general.pipx_info: {}
  register: info2_all

- name: retrieve applications (include_deps=true)
  community.general.pipx_info:
    include_deps: true
    include_injected: true
  register: info2_all_deps

- name: retrieve application ansible-lint
  community.general.pipx_info:
    name: ansible-lint
    include_deps: true
    include_injected: true
  register: info2_lint

- name: check assertions multiple apps
  assert:
    that:
        - info2_all.pipx_results|length == 2
        - "'tox' in info2_all.pipx_results"
        - info2_all.pipx_results.tox.version == "3.24.0"
        - "'dependencies' not in info2_all.pipx_results.tox"
        - "'injected' not in info2_all.pipx_results.tox"

        - info2_all_deps.pipx_results|length == 2
        - "'tox' in info2_all_deps.pipx_results"
        - info2_all_deps.pipx_results.tox.version == "3.24.0"
        - info2_all_deps.pipx_results.tox.dependencies == ["virtualenv"]
        - "'injected' in info2_all_deps.pipx_results['ansible-lint']"
        - "'licenses' in info2_all_deps.pipx_results['ansible-lint'].injected"

        - info2_lint.application == "ansible-lint"
        - "'version' in info2_lint"
        - "'injected' in info2_lint"
        - "'licenses' in info2_lint.injected"
